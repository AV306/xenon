plugins {
	id 'java'
	id 'fabric-loom' version '0.12-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	/*maven {
		name = "CottonMC"
		url = "https://server.bbkr.space/artifactory/libs-release"
	}*/

	maven {
    	url "https://jitpack.io"
  	}
	
  	maven {
    	url "https://maven.terraformersmc.com/"
  	}
	
  	maven {
    	url "https://maven.shedaniel.me/"
  	}

	maven {
		url "https://maven.siphalor.de/"
	}

	maven {
		url "https://maven.isxander.dev/releases"
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// CompleteConfig
	// why is there nothing in here
	modImplementation "com.github.Lortseam:completeconfig:${project.complete_config_version}"
	modImplementation "com.github.Lortseam.completeconfig:base:${project.complete_config_version}"
	modImplementation "com.github.Lortseam.completeconfig:gui-cloth:${project.complete_config_version}"

	// Cloth Config
	// This is gonna make the entire JAR like 1GB or something
	// WHY CAN'T IT ALL BE IN ONE NICE JAR TO INCLUDE
	/*modApi( "me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}" ) {
		exclude( group: "net.fabricmc.fabric-api" )
	}*/

	// apache commons-io
	//compileOnly 'commons-io:commons-io:2.11.0'

	// JSON.simple
	//implementation 'com.googlecode.json-simple:json-simple:1.1.1'
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
	
	// I used switch patterns, which are currently
	// in preview.
	it.options.compilerArgs.add( "--enable-preview" )
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of( 17 )
	}
}
